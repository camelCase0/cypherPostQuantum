name: Build Executable

on:
  push:
    tags:
      - '*'
    branches:
      - master # Adjust branch as needed
  pull_request:
    branches:
      - master # Adjust branch as needed

jobs:
  build-linux:
    runs-on: ubuntu-20.04 # Use ubuntu-latest for cross-platform compatibility

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8 # Specify your Python version

      - name: Install dependencies
        run: | 
          python3.8 -m pip install --upgrade pip
          python3.8 -m pip install pyinstaller
  #   pip install -r requirements.txt  # Adjust as per your project setup

      - name: Build executable
        run: pyinstaller --onefile main.py  # Replace with your main script name

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: exe-files-linux
          path: dist/main # Assuming 'dist' is the default directory pyinstaller creates the exe in

  # Repeat the build job for Windows and macOS if needed
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
        #   pip install -r requirements.txt

      - name: Build executable
        run: |
          python -m pip install pyinstaller
          pyinstaller --onefile --windowed main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: exe-files-windows
          path: dist/main.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python3.8 -m pip install --upgrade pip
        #   pip install -r requirements.txt

      - name: Build executable
        run: |
          python3.8 -m pip install pyinstaller
          pyinstaller --onefile --windowed main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: exe-files-macos
          path: dist/main

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build-linux
      - build-windows
      - build-macos
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Action to checkout the repository

      - name: Download Linux-executable
        uses: actions/download-artifact@v4
        with:
          name: |
            exe-files-linux
          path: linux

      - name: Download Windows-executable
        uses: actions/download-artifact@v4
        with:
          name: |
            exe-files-windows
          path: windows

      - name: Download MacOS-executable
        uses: actions/download-artifact@v4
        with:
          name: |
            exe-files-macos
          path: macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.1 # Replace with your desired tag version
          release_name: Release v1.0.1 # Replace with your desired release name
          body: |
            Release notes for version 1.0.1
            - Fixing executables for Windows, macOS, and Linux
          draft: false
          prerelease: false

      - name: Upload Release Asset Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux/main
          asset_name: CryptoCalc-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows/main.exe
          asset_name: CryptoCalc.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset MacOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos/main
          asset_name: CryptoCalc-macOS
          asset_content_type: application/octet-stream
